version: '3.8'

services:
  atd-ingestion:
    build: .
    image: atd-ingestion:latest
    container_name: atd-ingestion-service
    restart: unless-stopped
    environment:
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./data:/data:ro  # Mount data directory for file access
    networks:
      - atd-network
    depends_on:
      - kafka
    healthcheck:
      test: ["CMD", "python", "-c", "import os; exit(0 if os.path.exists('/proc/1/status') else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kafka setup (for local development/testing)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: atd-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - atd-network
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/logs

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: atd-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - atd-network
    volumes:
      - kafka-data:/var/lib/kafka/data

  # Kafka UI for monitoring (optional)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: atd-kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - atd-network

networks:
  atd-network:
    driver: bridge
    # Connect to existing clickhouse network if needed
    external:
      name: clickhouse-network

volumes:
  zookeeper-data:
  zookeeper-logs:
  kafka-data: