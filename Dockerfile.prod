# Multi-stage production Dockerfile for ATD Ingestion Service
# Stage 1: Builder
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Copy requirements
COPY requirements.txt .

# Create virtual environment and install dependencies
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Install appsentinels-cli and dependencies
RUN pip install --no-cache-dir \
    appsentinels-cli>=2.2.0 \
    pandas>=2.0.0 \
    clickhouse-connect>=0.6.0 \
    pyarrow>=12.0.0 \
    python-dateutil

# Install as-cli-ingest plugin
RUN pip install --no-cache-dir git+https://github.com/appsentinels/as-cli-ingest.git

# Stage 2: Runtime
FROM python:3.11-slim

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv

# Set environment to use virtual environment
ENV PATH="/opt/venv/bin:$PATH"
ENV PYTHONUNBUFFERED=1
ENV LOG_LEVEL=INFO

# Create non-root user
RUN useradd -m -u 1000 atduser

WORKDIR /app

# Create necessary directories
RUN mkdir -p /app/logs /app/config && \
    chown -R atduser:atduser /app

# Copy application files
COPY --chown=atduser:atduser setup.py .
COPY --chown=atduser:atduser main.py .
COPY --chown=atduser:atduser src/ ./src/
COPY --chown=atduser:atduser config/ ./config/

# Install the package
RUN pip install -e .

# Switch to non-root user
USER atduser

# Create volume mount points
VOLUME ["/app/logs", "/app/config", "/data"]

# Health check - check if the service is responsive
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import os, sys; sys.exit(0 if os.path.exists('/proc/1/status') else 1)"

# Run the service using the installed command
CMD ["atd-ingestion", "--config", "/app/config/config.yaml"]